for --> loop is used to execute a block of code repeatedly for a known number of times.
initialization --> start
condition -- iteration
update -- executed at the end of each iteration
-----while loop-----------------------
-->we dont know the numbers of times loop will be execute

-->repeats a block of code if the condition is true


Syntax

while(condition){
// code to execute
}
# include <stdio.h>
void main(){
int a =1;
do {
a++;
printf("a : %d\n",a);
} while( a <=5);

-------------arrays ( one - d)------------
an array is a collection of elements of the same data type stored at contifgues memory allocation.

# include <stdio.h>
void main(){
int a;
float b;
char c;
char arr[100];
scanf("%d %f %c %s",&a,&b,&c,arr);
printf("%d %f %c %s",a,b,c,arr);
}
Scope -->
local scope -->defined inside a function/block, accessible only there
global scope -->defined outside all functions,accessible anywhere
Lifetime-->
defines how ling the variables exits during the program
-->static -->var
-->global-- var
storage classes-->

Storage class Scope lifetime default value
1)auto local function execution Garbage
2)static local or global entire program 0
3)register local function execution Garbage
4)extern global entire program Garbage

#include<stdio.h>
#include<stdlib.h>
int main(){
int *p;
int n=5;
p=(int*)malloc(n*sizeof(int));
if(p==NULL){
printf("Memory not allocated\n");
return 1;
}
for(int i=0;i<n;i++){
p[i]=(i+1)*10;
}
printf("stored values:");
for(int i=0;i<n;i++){
printf("%d ",p[i]);
}
printf("\n");
return 0;
}
#include<stdio.h>
struct student{
int roll;
char name[20];
float marks;
};
int main(){
struct student s;
printf("enter the roll no:");
scanf("%d",&s.roll);
printf("enter the name:");
scanf("%s",s.name);
printf("enter the marks:");
scanf("%f",&s.marks);
printf("\n student details:\n");
printf("roll =%d\n",s.roll);
printf("name = %s\n",s.name);
printf("marks =%f\n",s.marks);
return 0;
}
